/*
 * This file was generated by the Gradle 'init' task.
 *
 * The settings file is used to specify which projects to include in your build.
 *
 * Detailed information about configuring a multi-project build in Gradle can be found
 * in the user manual at https://docs.gradle.org/8.1.1/userguide/multi_project_builds.html
 */

plugins {
	id 'java'
	id 'eclipse'
	id 'jacoco'
}

def projectName = 'easyjce'
def projectDesc = 'interface for encrypting, decrypting, and hashing data for transmission or storage using the Java Cryptographic Extension (JCE)'
group = "org.antfarmer"
archivesBaseName = "easyjce"
version = '1.1.1'

def isContBuild = System.getenv("IS_CI_BUILD") == "true"

eclipse {
	project {
		name = projectName
		comment = projectDesc
		natures = ['org.eclipse.jdt.core.javanature', 'org.eclipse.buildship.core.gradleprojectnature']
		buildCommand 'org.eclipse.buildship.core.gradleprojectbuilder'
	}
}

java {
	sourceCompatibility = 8
	targetCompatibility = 8
	toolchain {
		languageVersion = JavaLanguageVersion.of(8)
	}
}

jar {
	manifest {
		attributes	'Name': 'org/antfarmer/ejce/',
					'Implementation-Title': projectName,
					'Implementation-Version': version,
					'Sealed': 'true'
	}
}

// give test dependencies access to compileOnly dependencies to emulate providedCompile
configurations {
    testImplementation.extendsFrom compileOnly
}

repositories {
	mavenCentral()
}

dependencies {
	// Hibernate 4.0 - 5.1
	compileOnly group: 'org.hibernate', name: 'hibernate-core', version: '4.3.11.Final'
	
	// bouncycastle >= 1.58
	compileOnly group: 'org.bouncycastle', name: 'bcprov-jdk18on', version: '[1.78, 2)'
	
	// Spring >= 4.2.6
	compileOnly group: 'org.springframework.security', name: 'spring-security-crypto', version: '[5.0.7.RELEASE, 5.1)'
	
	compileOnly group: 'de.mkammerer', name: 'argon2-jvm', version: '2.4'
	
	testImplementation group: 'junit', name: 'junit', version: '[4.13, 5)'
	testImplementation group: 'org.easymock', name: 'easymock', version: '[3.6, 4.0)'
	
	testImplementation group: 'org.slf4j', name: 'slf4j-api', version: '[1.7.25, 1.8)'
	testImplementation group: 'ch.qos.logback', name: 'logback-classic', version: '[1.2.13, 1.3.0)'
	testImplementation group: 'commons-logging', name: 'commons-logging-api', version: '[1.1, 1.3)'
	testImplementation group: 'com.h2database', name: 'h2', version: '1.3.175'
	
	testImplementation files('lib/test/antfarmer-common_app.jar')
}

// copy test resources for testing
task copyTestResources(type: Copy) {
	from ("${projectDir}/src/test/resources") {
		include '**/*.properties'
		include '**/*.xml'
	}
	into "${buildDir}/classes/java/test"
}
processTestResources.dependsOn copyTestResources

javadoc {
	destinationDir = file("${projectDir}/docs")
	options.with {
		overview "src/main/java/overview.html"
		// links to external docs
		links 'https://docs.jboss.org/hibernate/orm/4.3/javadocs/'
		links 'https://docs.oracle.com/javase/8/docs/api/'
	}
	options.addStringOption('notimestamp', 'yes')
}
clean.doLast {
	file("${projectDir}/docs").deleteDir()
}

// Codecov requirements //////////////////////////////////////////////////////////////
jacocoTestReport {
	reports {
		xml.required = ! isContBuild
		html.required =  isContBuild
	}
}

check.dependsOn jacocoTestReport

